# Default values for agentkube-operator-charts.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: agentkube/agentkube-operator
  pullPolicy: IfNotPresent
  tag: "v0.3.0"

manager:
  serverEndpoint: https://api.agentkube.com 
  apikey: # REPLACE WITH API KEY
  clusterName: # REPLACE WITH CLUSTER NAME
  readonly: true 

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  name: ""

prometheus:
  enabled: true
  image:
    repository: prom/prometheus
    tag: v2.43.0
  scrapeInterval: 15s
  evaluationInterval: 15s
  replicas: 1
  containerPort: 9090
  args:
    - "--config.file=/etc/prometheus/prometheus.yml"
    - "--storage.tsdb.path=/prometheus"
    - "--web.enable-lifecycle"
    - "--storage.tsdb.retention.time=15d"
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  storage:
    sizeLimit: 5Gi
  service:
    type: ClusterIP
    port: 9090
  podSecurityContext:
    fsGroup: 65534
  podScrapeConfigs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
  clusterRole:
      rules:
      - apiGroups: [""]
        resources:
        - nodes
        - nodes/proxy
        - nodes/metrics
        - services
        - endpoints
        - pods
        - namespaces
        verbs: ["get", "list", "watch"]
      - apiGroups: ["extensions", "networking.k8s.io"]
        resources:
        - ingresses
        verbs: ["get", "list", "watch"]
      - apiGroups: ["metrics.k8s.io"]
        resources:
        - pods
        - nodes
        verbs: ["get", "list", "watch"]
      - nonResourceURLs: 
        - /metrics
        - /metrics/cadvisor
        - /metrics/resource
        - /metrics/probes
        verbs: ["get"]

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8082

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


# Metrics configuration
metrics:
  enabled: true
  port: 8080
  path: /metrics



# Leader election configuration
leaderElection:
  enabled: true
  resourceName: "agentkube-operator-leader-election"

# Logging configuration
logging:
  level: info
  format: json
